#-----------------------------------------------------------------------
# File: minimal.mem
# Date: 13.06.2019
# Athr: A. Devonport
# Desc: This file describes the memory buffers needed by the kernel and
#       how they are distributed as arguments to the kernel functions
#       Each top scope is a function name followed by inner scopes for 
#       the argument names and they contain the memory fingerprint.
#-----------------------------------------------------------------------

# Note: functions index (from 0) and argument index (from 0) is considered by their appearance order

# function: 0- initialize_center
# -----------------------
gb_initialize_center{ 

	# argument 0.0: initial_state (gets attached to a new buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 0.1: final_state (gets attached to a new buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.2: input (gets attached to a new buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.3: k0 (gets attached to a new buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.4: k1 (gets attached to a new buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.5: k2 (gets attached to a new buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.6: k3 (gets attached to a new buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 0.7: tmp (gets attached to a new buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 0.8: t (gets attached to a new buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}
}

# function: 1- gb_integrate_center_1
# -----------------------
gb_integrate_center_1{ 

	# argument 1.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 1.1: final_state (gets attached to 0.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 1.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 1.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}

# function: 2- gb_integrate_center_2
# -----------------------
gb_integrate_center_2{ 

	# argument 2.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 2.1: final_state (gets attached to 0.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 2.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 2.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}

# function: 3- gb_integrate_center_3
# -----------------------
gb_integrate_center_3{ 

	# argument 3.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 3.1: final_state (gets attached to 0.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 3.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 3.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 4- gb_integrate_center_4
# -----------------------
gb_integrate_center_4{ 

	# argument 4.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 4.1: final_state (gets attached to 0.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 4.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 4.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}

# function: 5- gb_initialize_radius
# -----------------------
gb_initialize_radius{ 

	# argument 5.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 5.1: final_state (gets attached to a new buffer (so that the final radius doesn't get clobbered)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 5.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 5.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 6- gb_compute_contraction_matrix
# -----------------------
gb_compute_contraction_matrix{ 

	# argument 6.0: cidxs (gets attached to a new buffer)
	# ----------------------------------------------------
	cidxs{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: cvals (gets attached to a new buffer)
	# ----------------------------------------------------
	cvals{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.2: ncel (gets attached to a new buffer)
	# ----------------------------------------------------
	ncel{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

}

# function: 6- gb_integrate_radius_1
# -----------------------
gb_integrate_radius_1{ 

	# argument 6.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: final_state (gets attached to 2.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "5";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 6.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

	# argument 6.0: cidxs (gets attached to 6.0's buffer)
	# ----------------------------------------------------
	cidxs{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: cvals (gets attached to a 6.1's buffer)
	# ----------------------------------------------------
	cvals{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.2: ncel (gets attached to 6.2's buffer)
	# ----------------------------------------------------
	ncel{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "2";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

}

# function: 7- gb_integrate_radius_2
# -----------------------
gb_integrate_radius_2{ 

	# argument 7.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 7.1: final_state (gets attached to 2.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "5";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 7.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 7.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

	# argument 6.0: cidxs (gets attached to 6.0's buffer)
	# ----------------------------------------------------
	cidxs{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: cvals (gets attached to a 6.1's buffer)
	# ----------------------------------------------------
	cvals{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.2: ncel (gets attached to 6.2's buffer)
	# ----------------------------------------------------
	ncel{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "2";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
}


# function: 8- gb_integrate_radius_3
# -----------------------
gb_integrate_radius_3{ 

	# argument 8.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 8.1: final_state (gets attached to 2.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "5";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 8.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 8.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

	# argument 6.0: cidxs (gets attached to 6.0's buffer)
	# ----------------------------------------------------
	cidxs{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: cvals (gets attached to a 6.1's buffer)
	# ----------------------------------------------------
	cvals{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.2: ncel (gets attached to 6.2's buffer)
	# ----------------------------------------------------
	ncel{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "2";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

}



# function: 9- gb_integrate_radius_4
# -----------------------
gb_integrate_radius_4{ 

	# argument 13.0: initial_state (gets attached to 0.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 9.1: final_state (gets attached to 2.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "5";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.2: input (gets attached to 0.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.4: k1 (gets attached to 0.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.5: k2 (gets attached to 0.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.6: k3 (gets attached to 0.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 9.7: tmp (gets attached to 0.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 9.8: t (gets attached to 0.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

	# argument 6.0: cidxs (gets attached to 6.0's buffer)
	# ----------------------------------------------------
	cidxs{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.1: cvals (gets attached to a 6.1's buffer)
	# ----------------------------------------------------
	cvals{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 6.2: ncel (gets attached to 6.2's buffer)
	# ----------------------------------------------------
	ncel{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "6";  
		residentFuncArgIdx		= "2";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
}


# function: 10- ctmm_initialize
# -----------------------
ctmm_initialize{ 

	# argument 10.0: initial_state (gets attached to a new buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 10.1: final_state (gets attached to a new buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.2: input (gets attached to a new buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.3: k0 (gets attached to a new buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.4: k1 (gets attached to a new buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.5: k2 (gets attached to a new buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.6: k3 (gets attached to a new buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.7: tmp (gets attached to a new buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 10.8: t (gets attached to a new buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}
}


# function: 11- ctmm_integrate_1
# -----------------------
ctmm_integrate_1{ 

	# argument 1.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 11.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 11.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 12- ctmm_integrate_2
# -----------------------
ctmm_integrate_2{ 

	# argument 12.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 12.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 12.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 13- ctmm_integrate_3
# -----------------------
ctmm_integrate_3{ 

	# argument 13.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 13.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 13.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 14- ctmm_integrate_4
# -----------------------
ctmm_integrate_4{ 

	# argument 14.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 14.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 14.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}

# function: 10- mc_initialize
# -----------------------
mc_initialize{ 

	# argument 10.0: initial_state (gets attached to a new buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";  
		residentFuncArgIdx		= "-1";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 10.1: final_state (gets attached to a new buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.2: input (gets attached to a new buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.3: k0 (gets attached to a new buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.4: k1 (gets attached to a new buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.5: k2 (gets attached to a new buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.6: k3 (gets attached to a new buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 10.7: tmp (gets attached to a new buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 10.8: t (gets attached to a new buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

	# argument 10.9: rands (gets attached to a new buffer)
	# ----------------------------------------------------
	rands1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 10.10: rands (gets attached to a new buffer)
	# ----------------------------------------------------
	rands2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "true";
		residentFuncIdx			= "-1";
		residentFuncArgIdx		= "-1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
}


# function: 11- mc_integrate_1
# -----------------------
mc_integrate_1{ 

	# argument 1.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 11.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 11.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 11.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 12- mc_integrate_2
# -----------------------
mc_integrate_2{ 

	# argument 12.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 12.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 12.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 12.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 13- mc_integrate_3
# -----------------------
mc_integrate_3{ 

	# argument 13.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 13.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 13.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 13.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}


# function: 14- mc_integrate_4
# -----------------------
mc_integrate_4{ 

	# argument 14.0: initial_state (gets attached to 10.0's buffer)
	# ----------------------------------------------------
	initial_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";  
		residentFuncArgIdx		= "0";  
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 14.1: final_state (gets attached to 10.1's buffer)
	# ----------------------------------------------------
	final_state{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "1";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.2: input (gets attached to 10.2's buffer)
	# ----------------------------------------------------
	input{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "2";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.3: k0 (gets attached to 0.3's buffer)
	# ----------------------------------------------------
	k0{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "3";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.4: k1 (gets attached to 10.4's buffer)
	# ----------------------------------------------------
	k1{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "4";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.5: k2 (gets attached to 10.5's buffer)
	# ----------------------------------------------------
	k2{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "5";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.6: k3 (gets attached to 10.6's buffer)
	# ----------------------------------------------------
	k3{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "6";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}
	
	# argument 14.7: tmp (gets attached to 10.7's buffer)
	# ----------------------------------------------------
	tmp{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "true";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "7";
		requiresSubBuffering	= "true";
		equalSubBufferSizes		= "false";
	}

	# argument 14.8: t (gets attached to 10.8's buffer)
	# ----------------------------------------------------
	t{
		directionWriteOrRead	= "false";
		HostDoWrite				= "false";
		HostDoRead				= "false";
		memAccessFlag			= "CL_MEM_READ_WRITE";
		baseTypeSize			= "4";
		baseTypeMultiple		= "1";
		baseTypeXDimMultiple	= "0";
		baseTypeYDimMultiple	= "0";
		deviceMultiple			= "false";
		isGlobalMemory			= "true";
		isConstantMemory		= "false";
		isLocalMemory			= "false";
		isRangeScalable			= "false";
		isNewOrResident			= "false";
		residentFuncIdx			= "0";
		residentFuncArgIdx		= "8";
		requiresSubBuffering	= "false";
		equalSubBufferSizes		= "false";
	}

}